
We introduce feature terms containing sorts, variables, negation and named disjunction for the specification of feature structures. We show that the possibility to label distinctions with names has major advantages both for the use of feature logic in computational linguistics and its implementation. We give an open world semantics for feature terms, where the denotation of a term is determined in dependence on the disjunctive context, i.e. the choices taken for the disjunctions. We define context-unique feature descriptions, a relational, constraint-based representation language and give a normalization procedure that allows to test consistency of feature terms. This procedure does not only avoid expansion to disjunctive normal form but maintains also structure sharing between information contained in different disjuncts as much as possible. Context-unique feature descriptions can be easily implemented in environments that support ordinary unification (such as PROLOG).

